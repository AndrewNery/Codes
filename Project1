rm(list = ls())

dados <- read.table("Max-Min.txt",header = T)
attach(dados)
x = MAX #dados reais
tempo = seq(2000,2015,1)



#tolerancias
#epslon = c(1000,500,300,200,100, 90, 80, 60, 50, 25, 5, 1, 10^-1, 10^-2, 10^-3) 
epslon = c(50,40,30,25,20,15,10,5)
Te = length(epslon)

t = 1 #indicador da populacao
i = 1 #indicador da particula

part = vector(mode = "numeric", length = 2) #particulas depois da pertubacoes
n.param = length(part)

N = 1000 #n de particulas

pop = array(NA, dim = c(N, Te, n.param)) #particulas de todas populacoes
w = matrix(NA, nrow = N, ncol = Te) #pesos das particulas de todas populacoes


for(t in 1:Te){
  
  for(i in 1:N){
    
    if(t == 1){
      
      repeat{
        part = runif(2,0,30)
        x1 = rweibull(16,part[1],part[2])
        dist = sum((x1 - x)^2)
        
        if(dist < epslon[t]){
          pop[i,t,] = part
          w[i,t] = 1
          break
        }
      }
    }
    else{
      pdf = 0
      a = 0
      while(pdf == 0){
        p1_old = pop[,t-1,1]
        p2_old = pop[,t-1,2]
        
        pesos_old = w[,t-1]
        cum_pesos = cumsum(pesos_old)
        
        u = runif(1)
        if(u < cum_pesos[1]){
          sel = 1
        } else{
          index = rep(1,length(cum_pesos[cum_pesos <= u]))
          sel = sum(index) + 1
        }
        
        max1 = max(pop[,t-1,1])
        max2 = max(pop[,t-1,2])
        
        min1 = min(pop[,t-1,1])
        min2 = min(pop[,t-1,2])
        
        m1 = 0.5*(max1 - min1)
        m2 = 0.5*(max2 - min2)
        
        linf1 = -m1
        lsup1 = m1
        linf2 = -m2
        lsup2 = m2
        
        desv1 = runif(1,linf1,lsup1)
        desv2 = runif(1,linf2,lsup2)
        
        p1_new = p1_old[sel] + desv1
        p2_new = p2_old[sel] + desv2
        part = c(p1_new, p2_new)
        
        pdf1 = dunif(p1_new, min1, max1)
        pdf2 = dunif(p2_new, min2, max2)
        pdf = prod(pdf1,pdf2)
        #print(pdf)
      }
      b = 0
      repeat{
        x1 = rweibull(16,part[1],part[2])
        dist = sum((x1 - x)^2)
        b = b + 1
        print(c(b,dist))
        if(dist < epslon[t]){
          pop[i,t,] = part
          
          k1 = c()
          k2 = c()
          for(j in 1:N){
            k1[j] = dunif(p1_new, min1, max1)
            k2[j] = dunif(p2_new, min2, max2)
          }
          k = k1*k2
          
          w[i,t] = pdf/(pesos_old*sum(k))
          print(w[i,t])
          break
        }
      }
      
    }
  }
  w[,t] = w[,t]/sum(w[,t])
}

part[1] = mean(pop[,4,1])
part[2] = mean(pop[,4,2])
x1 = rweibull(16,part[1],part[2])

a = x
b = x1
plot(a, type = "l", ylim = c(22,30))
#par(new = T)
lines(b, type = "p", col = "blue", xlab = "", ylab = "")
